---
openapi: 3.0.0
info:
  title: API Gateway OpenAPI for Image Processor
  version: 1.0.0

paths:
  /image-processing:
    post:
      description: Create a new Post for image processor
      operationId: createPost
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Empty'          
      x-amazon-apigateway-integration:
        uri: ${lambda_uri}
        httpMethod: POST
        type: aws
        passthroughBehavior: "when_no_templates"
        requestTemplates:
          application/json: "#set($inputRoot = $input.path('$'))\n{\n    \"imageData\": \"$inputRoot.imageData\",
                  \n    \"mime\": \"$inputRoot.mime\",
                  \n    \"folder\": \"$inputRoot.folder\",
                  \n    \"stage\": \"$context.stage\",
                  \n    \"http_method\": \"$context.httpMethod\"\n}"
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Empty'      
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
  /{folder}/{imageKey}:
    get:
      description: Get the image key from the folder
      operationId: getFolderImageKey
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Empty'      
      x-amazon-apigateway-integration:
        uri: ${lambda_uri}
        httpMethod: POST
        type: aws
        passthroughBehavior: "when_no_templates"
        requestTemplates:
          application/json: |
            #set($inputRoot = $input.path('$'))
            {
              "folder": "$input.params('folder')",
              "imageKey": "$input.params('imageKey')",
              "stage": "$context.stage",
              "http_method": "$context.httpMethod"
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    delete:
      description: Delete the image key from the folder
      operationId: deleteFolderImageKey
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Empty'
      x-amazon-apigateway-integration:
        uri: ${lambda_uri}
        httpMethod: POST
        type: aws
        passthroughBehavior: "when_no_templates"
        requestTemplates:
          application/json: |
            #set($inputRoot = $input.path('$'))
            {
              "folder": "$input.params('folder')",
              "imageKey": "$input.params('imageKey')",
              "stage": "$context.stage",
              "http_method": "$context.httpMethod"
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        200:
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: 
            application/json:
              schema: 
                $ref: '#/components/schemas/Empty'      
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {
              "statusCode" : 200
            }
        responses:
          default:
            statusCode: "200"
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
              method.response.header.Access-Control-Allow-Methods: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
components:
  schemas:
    Empty:
      type: object                               